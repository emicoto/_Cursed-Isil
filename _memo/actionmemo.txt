Action处理顺序

initScene {
	load map
	load character
	print location infomation
	print character information
	init actions menus
	init actions values
}

wait player input

get action id
if action has selectable parts (action parts and target parts)
	show parts menu
	wait player input

		get parts id
		if has selectable options
			wait player input
		
		get options id
		check action

	else check action

ready for action{
	if action id == prev id
		update action options
	else
		reset id and update options
}

check action{
		if action able
			do action
		else
			cancel action
			init action values
}

before action
	if cancel action
		reset and init actions values

do action{
	save actiondetails { action id, target chara id,  action parts id,  target parts id, options id,}
	if action option has autokeep
		save action to Using.actor

	action events > print events text

	counter check
	if counter
		do counter
	
	if has continuos action
		do keep action

	process sources
	print action result

	if has palam change event
		do palam change event

	if has after event
		do after event
	
}

finish action
	check after event
	if has after event
		do after event
	
	clear temporary flags and values
	reset action
	goto init movement

动作记录用变量

T.select = {
	id: action id
	tc: target chara id
	ap: action parts id
	tp: target parts id
  pos: pose id
}
记录玩家输入，当action id有变化时会reset

T.action = {
	id: action id
	tc: target chara id
	ap: action parts id
	tp: target parts id
  pos: pos id
}
确定执行时的记录

T.counter = {
	id: action id
	ac: actor chara id
	ap: action parts id
	tp: target parts id
  pos: pos id
}
记录npc的counter信息。
有多少npc就会有多少个？
或者轮流刷新（处理完一个npc就reset，再处理下一个？）


