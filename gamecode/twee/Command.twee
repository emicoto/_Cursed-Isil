
:: //commemo
指令类型：
常规 - 日常模式下所有常规指令。包括 移动、休息、地点互动、友好的交流互动
调教 - 调教模式下所有常规指令。包括前戏、道具调戏、性交、肛交、尿道开发、SM。

挑逗 - 日常模式下的挑逗类指令，如抛媚眼、诱惑、接吻、抚摸敏感部位等。也包括性骚扰类、日常用调教类指令。
魔法 - 魔法类指令

道具 - 性玩具一类的道具的使用。常规道具在收纳戒指（INVENTORY）中，随时可使用。
前戏 - 爱抚接吻一类的轻度接触。
性交 - 插入性行为
尿道 - 尿道开发
SM   - 捆绑鞭打等SM行为

鬼畜 - 反人性的指令。包含NTR。
触手 - 触手相关指令。

:: //CommandSystem

采用 TiTS + eraTW模式
日常交流模式相对简化，改成事件模式。
或许更接近eraMaid或school的感觉。

调教模式下，动作指令相对简化。可以用 linkreplace，comselect（新的选项方式，类似eventselect但用于com模式）的方式对动作分支进行展开以及重复动作。

/list表格顺
/no, name, tags, time
/name最大六个字，主分类tag会根据id首字母自动分配。tag中可以补充小分类，用|分割。
/G-常规指令，T-挑逗、前戏等身体轻度接触指令，S-性交类指令，A-肛门类指令，U-尿道类指令
/X-觸手类指令，I-道具类指令，M-SM、鬼畜等虐待系行为指令，P-各种情景play系开关，O-其他

:: ComList[list]

/* 常规指令 */
G0, 移动, 交流,1
G1, 放松, 休息,15
G2, 聊天, 交流,0

/* 挑逗、前戏  */
T0, 抚摸, 常规
T1, 摸胸,
T2, 玩乳头,
T3, 吸乳头,
T4, 撸阴茎,
T5, 指交,
T99, 推倒, 常规,

/* 触手专用，触手都可持续。同时进行数看部位是否被占用以及触手数量。
/* 或许修改成 部位 对 部位 使用 什么 进行 动作的方式？ */
X1, 玩乳头(触)
X2, 吸乳头(触)
X3, 撸阴茎(触)
X4, 玩后穴(触)
X5, 玩私穴(触)

:: RegistAllCom[script]

//批处理多个指令。
Com.init()

Com.globalFilter = function (id) {
    const com = comdata[id]
    const target = C[tc]
    const player = C[pc]
    const onlyU = (tc === pc)

    const notarget = [0, 1] //不需要对象
    const active = [2] //对象需要处于可互动状态

    //过滤器启用中
    if(V.currentFilter !== 'all' && !com.tag.includes(V.currentFilter))return false 
    //特定指令过滤设定中。
    if(S.comFilter[id]) return false 

    //日常模式和调教模式过滤器
    if(V.system.mode == 'train' && com.tag.has('日常') && !com.tag.has('交流','调教')) return false;

    if(V.system.mode == 'normal' && com.tag.has('调教') && !com.tag.has('日常')) return false;

    //角色扮演上的限制
    if( pc === 'Isil' && com.tag.has('挑逗', '调教', '鬼畜', '触手') && !Cflag[pc]?.Fallen) return false 

    //需要对象
    if(!notarget.includes(id) && onlyU ) return false; 
    //需要对象处于可活动状态
    if( F.uncons(target) && active.includes(id) ) return false; 

    return true

}

Com.globalOrder = function(id){
    const com = comdata[id]
    const target = C[tc]
    const player = C[pc]

    for(const [k, obj] of Object.entries(Trait.data) ){
        if( target.traits.includes(k) && com.tag.has('调教') ){
            let order = obj.effect('onOrder', id)
            if(!order) order = obj.order;

            if(order) {
                T.comorder += obj.order;
                T.order += `【${k}(${obj.order > 0 ? '+' : ''}${obj.order})】`
            }
        }
    }

    return 0
}

Com.globalCond = function(id){
    const com = comdata[id]
    const target = C[tc]

    if( !com.tag.has('常规','魔法','调情','爱抚') && F.isRape(target) && F.canResist(target) && !com.tag.includes('触手')) {

        if(!F.weaker(target, C[pc])) T.reason += '【强奸对象具备抵抗能力】';
        else return true;

        return false
    }

    if( com.tag.includes('触手') && !F.isFallen(target) && !F.uncons(target) ){
        T.reason += '【对象未堕落并且清醒着】'
        return false
    }

    return true
}

:: Command::Before
/* 指令执行前的通用文本。时间段提示、场景变换等。如果有运行代码不放这里。*/
<<if $date.time >= 1080 && !_timeCheckNight>>
<<set _timeCheckNight to true>>
天开始暗下来了……<br>
<</if>>

:: Command::After
/* 指令执行完毕时的通用事件文本。*/

:: Command_G0
休息了下

:: Command_G0::Script
<<script>>
Com.set('G0')
    .Check(()=>{})
    .Effect(()=>{})

<</script>>



:: Com_G0
/* 迟些切换成overlay？ */
<<goto 'Map'>>


:: Com_G1::Script[script]
/* 注册指令事件*/
Com.set('G1')
    .Check(()=>{ 
        return F.baseCheck(player, 'stamina', 'max')
    })
    .Effect(()=>{ 
        Source[pc].stamina += 30 
    })

/* 事件文本，before执行前文本，after执行后文本，cancel执行取消时文本 */
:: Com_G1::Cancel
暂时不用休息。<br>

:: Com_G1
<<if $location.tag.includes('chair')>>
坐在椅子上休息了下，
<<elseif $location.tag.includes('bed')>>
在床上躺下放松，
<<else>>
找了个合适的地方坐下休息了一会，
<</if>>
恢复了 $player.sup.stamina 点体力。<br>


:: Com_G2::Script[script]
Com.set('G2')
    .Check(()=>{
        return random(1,100) <= target.mood + 10 && !target.state.contains('失声','失聪')
    })
    .Effect(()=>{
        Source[tc].favo += 10
    })
    

:: Com_G2::Cancel
<<you>>试着跟对方搭话，
<<if !F.canSpeak($target)>>
可惜$target.name没有能力回应<<you>>。
<<else>>
但$target.name并没有心情理会<<you>>。
<</if>><br>

:: Com_G2
<<you>>试着跟$target.name搭话。<br>
<<=F.Kojo($tc, 'Com', 'G2')>>


:: Com_G2::Before//
/*取消前的文本sample */
$player.name走近$target.name准备搭话。<br>
<<linkreplace '取消'>><<resetLink>><<resetScene>><</linkreplace>><br>

:: Com_G2::After//
/*指令结束时的文本sample */
好感增加了一点。<br>

:: Com_T0
<<you>>的手在$target.name的身上四处游走着。<br>
<<=F.Kojo($tc, 'Com', 'T0')>>
<br>

:: Com_T1
<<you>>把手覆盖在$target.name的胸上开始抚摸。<br>
<<=F.Kojo($tc, 'Com', 'T1')>><br>

:: Com_T2
<<you>>用手轻轻捏住了$target.name的乳头<br>
<<=F.Kojo($tc, 'Com', 'T2')>>
<br>

:: Com_T3
<<you>>用嘴含住了$target.name的乳头，吮吸着。<br>
<<=F.Kojo($tc, 'Com', 'T3')>>
<br>

:: Com_T4::Script[script]
Com.set('T4')
   .Filter(()=>{
        return target.gender !== 'female'
   })

:: Com_T4
<<you>>轻轻握住了$target.name的阴茎，缓缓地前后撸动。<br>
<<=F.Kojo($tc, 'Com', 'T4')>>

:: Com_T5
<<you>>将手指探入$target.name的<<=F.splitSex($target,'菊穴','秘穴')>>在入口附近摩擦着。<br>
<<=F.Kojo($tc, 'Com', 'T5')>>


:: Com_T99::Script[script]
Com.set('T99')
   .Name(()=>{
        if(V.system.mode !== 'train'){
            if(F.uncons(target)){
                return '眠奸';                
            }           
            return '推倒';
        }
        else{
            return '结束';
        }
   })
   .Check(()=>{
        if(V.debug)
            return true;

        if(F.uncons(target)){
            return true;
        }
        
        if(Cflag[tc].favo < 1000 && V.system.mode !== 'train'){
            T.reason += '【好感不足】'
            return false
        }

        return true
   })
   .ComOrder(()=>{
        return 100
   })
   .Effect(()=>{
        if(V.system.mode !== 'train'){
            V.system.mode = 'train';
            Tsv[tc].woohoo = 1;
            Tsv[pc].woohoo = 1;
        }
        else{
            V.system.mode = 'normal';
            for(let i in Tsv){
                Tsv[i].woohoo = 0;
            }
        }
   })

:: Com_T99
<<if $system.mode !== 'train' >>
<<you>>将$target.name带到没人注意到的角落。<br>
<<=F.Kojo($tc, 'Com', 'T99', 'start')>>

<<else>>
<<you>>帮$target.name整理好衣服。<br>
<<=F.Kojo($tc, 'Com', 'T99', 'finish')>>
<</if>>


:: Com_X1::Script[script]
Com.set('X1')
    .Check(()=>{
        //能跑进来时已经过滤掉的情况：非合意且对象具备抵抗能力
        //触手系都需要堕落flag，或者性依存高于2500，或者具有服从系陷落素质后，才能在清醒时执行。
        //触手相关指令受触手等级限制
        //Check这里进行具体的条件筛选

        return true
    })
    .ComOrder(()=>{
        //order这里看对方配合度。数值就是需求的配合值。
        return 50 //return的是需求的配合度。

    })
    .Effect(()=>{
        Source[tc].esB += 100
        Source[tc].resist += Math.floor(1000 - F.Exp(tc, '触手奸')/5)

        F.getExp(target, '触手奸', random(3));
        F.getExp(target, 'B', random(2));
    })
    .ForceAble()

:: Com_X1
触手<<=(T.force? `强行爬上${$target.name}的身躯，` : '' )>>沿着$target.name的肌肤往胸部游走，缠绕在乳尖上开始蠕动。<br>
<<=either([
    '缠绕、蠕动。','揉捏、摩擦。','挑弄、点拨。','蠕动、揉捏。','挑逗、缠绕、扭捏。'
])>>触手不停地反复着动作，时重时轻地对乳尖反复进行刺激。
<br>
<<=F.Kojo($tc, 'Com', 'X1')>>

:: //Com_X1:Fail
因为对方不配合而取消时的文本。
口上分支是 Kojo_Chara_Com_id:Failed

:: //Com_X1:Force
整个事件脉络都不一样时。
直接用:Force做分支。
口上分支是 Kojo_Chara_Com_id:Force;


:: Com_X2::Script[script]
Com.set('X2')
    .Check(()=>{
        //能跑进来时已经过滤掉的情况：非合意且对象具备抵抗能力
        //触手系都需要堕落flag，或者性依存高于2500，或者具有服从系陷落素质后，才能在清醒时执行。
        //触手相关指令受触手等级限制
        //Check这里进行具体的条件筛选

        return true
    })
    .ComOrder(()=>{
        //order这里看对方配合度。数值就是需求的配合值。
        return 50 //return的是需求的配合度。

    })
    .Effect(()=>{
        Source[tc].esB += 100
        Source[tc].resist += Math.floor(1000 - F.Exp(tc, '触手奸')/5)

        F.getExp(target, '触手奸', random(3));
        F.getExp(target, 'B', random(2));
    })


:: Com_X2

触手<<=(T.force? `强行爬上${$target.name}的身躯，` : '' )>>沿着$target.name的肌肤往胸部游走，张开吸盘吸附在乳尖上，伸出触须吸舔乳尖。<br>

:: Com_X3

:: Com_X4

:: Com_X5